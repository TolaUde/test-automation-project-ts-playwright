name: Run Tests with Docker Compose
on:
    push:
        branches: [ main, develop ]
    pull_request:
        branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout Code (Repository)
      uses: actions/checkout@v4

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Create env file
      run: |
        echo "WORDPRESS_DB_HOST=${{ secrets.WORDPRESS_DB_HOST }}" >> .env
        echo "WORDPRESS_DB_USER=${{ secrets.WORDPRESS_DB_USER }}" >> .env
        echo "WORDPRESS_DB_PASSWORD=${{ secrets.WORDPRESS_DB_PASSWORD }}" >> .env
        echo "WORDPRESS_DB_NAME=${{ secrets.WORDPRESS_DB_NAME }}" >> .env
        echo "MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }}" >> .env
        echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env

    - name: Start Application (Services)
      run: |
        docker-compose up -d
        docker-compose ps

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install dependencies
      run: npm ci
          
    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run Playwright Tests
      continue-on-error: true
      run: |
       npx playwright test

    - name: Publish Test Summary Results
      run: npx github-actions-ctrf ctrf/ctrf-report.json

    - name: Create report
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

    - name: Clean Up
      if: always()
      run: docker-compose down
